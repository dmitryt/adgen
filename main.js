#!/usr/bin/env node

var program = require('commander'),
	winston = require('winston'),
	fs = require('fs'),
	path = require('path'),
	build = require('./lib/build'),
	u = require('./lib/util'),
	logger = new winston.Logger({
		transports: [
			new winston.transports.Console({
				handleExceptions: true,
				colorize: true
			})
		],
		exitOnError: false
	}),
	generate = function(entry, structure, options) {
		var filepath = u.mkdirp(u.getEntryPath.apply(u, arguments)),
			writeStream = fs.createWriteStream(filepath);
		logger.info('Created ', filepath);
		call(build.pipe, arguments).pipe(writeStream);
	},
	destroy = function(entry, structure, options) {
		var filepath = u.getEntryPath.apply(u, arguments);
		fs.unlink(filepath, function (err) {
			if (err) {
				if (err.code === 'ENOENT') {
					return logger.info('Nothing to remove');
				} else {
					throw err;
				}
			}
			logger.info('Removed ', filepath);
		});
	},
	call = function(fn, args) {
		fn.logger = logger;
		return fn.apply(fn, args);
	};

program.version("0.0.1");

program
	.command('generate <entry> <name>')
	.description('Generates new entry')
	.option('-m, --module <module>', 'Module name')
	.alias('g')
	.action(generate);

program
	.command('destroy <entry> <name>')
	.description('Destroy entry, that was generated by "generate" command')
	.option('-m, --module <module>', 'Module name')
	.alias('d')
	.action(destroy);

program.parse(process.argv);